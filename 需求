你需要编写一个命令行交互的Python、或者java构建的小游戏程序，
模拟一个简单的RPG游戏中的装备栏管理和战斗系统。
程序需要使用类来结构代码和使用git来作为版本控制，并实现以下功能：
装备栏管理
创建一个Player类，包含玩家的基本属性（如生命值、法力值、攻击力、防御力等）。
创建一个Inventory类，用于管理玩家的装备栏。装备栏可以存储不同类型的装备（如武器、防具、药水等）。
实现添加、移除和查看装备的功能。每种装备应有不同的属性加成（如增加攻击力、防御力、恢复生命值等）。
敌人选择和攻击系统
创建一个Enemy类，包含敌人的基本属性（如生命值、攻击力、防御力等）。
实现一个敌人选择系统，玩家可以选择攻击不同的敌人。
实现攻击系统，玩家和敌人可以互相攻击，计算伤害并更新生命值。
基础战斗系统
实现一个简单的战斗循环，玩家可以选择攻击敌人或使用装备栏中的物品（如药水）。
实现扣血、回蓝和伤害计算的功能。
当玩家或敌人的生命值降到0时，战斗结束。
示例交互
欢迎来到游戏！

请选择一个选项：
1. 查看装备栏
2. 添加装备
3. 移除装备
4. 查看玩家状态
5. 开始战斗
6. 退出游戏

> 2
请输入装备名称：长剑
请输入装备类型（武器/防具/药水）：武器
请输入装备属性加成（攻击力/防御力/恢复量）：10
装备已添加！

请选择一个选项：
1. 查看装备栏
2. 添加装备
3. 移除装备
4. 查看玩家状态
5. 开始战斗
6. 退出游戏

> 5
请选择一个敌人：
1. 史莱姆（生命值：30，攻击力：5）
2. 哥布林（生命值：50，攻击力：10）

> 1
你选择了史莱姆！

请选择一个动作：
1. 攻击
2. 使用装备栏中的物品

> 1
你攻击了史莱姆，造成了10点伤害！
史莱姆攻击了你，造成了5点伤害！

请选择一个动作：
1. 攻击
2. 使用装备栏中的物品

> 2
请选择一个物品：
1. 长剑（类型：武器，攻击力：10）
2. 药水（类型：药水，恢复量：20）

> 2
你使用了药水，恢复了20点生命值！

请选择一个动作：
1. 攻击
2. 使用装备栏中的物品

> 1
你攻击了史莱姆，造成了10点伤害！
史莱姆被击败了！

请选择一个选项：
1. 查看装备栏
2. 添加装备
3. 移除装备
4. 查看玩家状态
5. 开始战斗
6. 退出游戏

> 6
游戏结束，再见！
要求
使用类来结构代码，至少需要包含Player、Inventory和Enemy类。
每个类应有合理的属性和方法，确保代码结构清晰、易于维护。
实现命令行交互，确保用户可以通过输入选项来进行游戏操作。
代码应包含适当的错误处理，防止用户输入无效选项或数据。
提示
可以使用字典或列表来管理装备栏中的物品。
设计合理的属性和方法，使得类之间的交互简洁明了。
考虑使用循环和条件语句来实现战斗系统。